local ish = ish_item_stats.apply_compatibility_patches

local max = gamma_diff_utils.max
local smallest = gamma_diff_utils.smallest
function get_outfit_protection(obj, sec, type)

    local ini_adb = ini_file_ex("plugins\\gamma_actor.ltx")
    local adjuster = max(smallest, ini_adb:r_float_ex("adb_dmg_" .. type, "adjuster")) or 1

	if obj then
	    local outfit = IsOutfit(obj)
		local helmet = IsHeadgear(obj)
		local cobj = outfit and obj:cast_CustomOutfit() or helmet and obj:cast_Helmet()
		if (not cobj) then
			return 0
		end
		
		-- Special case for fire wound damage
		if (type == 6) then
			-- Outfit
			if outfit then
				protection = cobj:GetBoneArmor( BoneID["bip01_spine"] ) or 0
			-- Helmet
			elseif helmet then
				protection = cobj:GetBoneArmor( BoneID["bip01_head"] ) or 0
			end
		
			return protection * obj:condition() * adjuster
			
		-- Other types
		else
			return cobj:GetDefHitTypeProtection( type ) * obj:condition() * adjuster or 0
		end
    end
end

function get_arti_protection(obj, sec, type)
    local ini_adb = ini_file_ex("plugins\\gamma_actor.ltx")

    local arti = max(smallest, ini_adb:r_float_ex("adb_dmg_" .. type, "arti"))
    local prot = ini_adb:r_string_ex("adb_dmg_" .. type, "immunity")
    local limt = ini_adb:r_float_ex("adb_dmg_" .. type, "limiter")
    
    if obj then
        local immunities_sec = ini_sys:r_string_ex(obj:section(), "hit_absorbation_sect")
        local val = ini_sys:r_float_ex(immunities_sec, prot)

        if arti == nil or prot == nil or limt == nil then
            return val
        end

        if val >= 0 then
            val = val * 0.5 * obj:condition() * arti
        end
        
        return val
    end
    return 0
end

function get_weapon_eff_range(obj, sec)
    local ini_adb = ini_file_ex("plugins\\gamma_actor.ltx")

    if obj then
		local cobj = obj:cast_Weapon()
		if (not cobj) then 
			return 0 
		end
		local id = obj and obj:id()
		local bullet_speed = utils_item.get_param(sec, obj and obj:id(), "bullet_speed", "float", true)
        local kind = utils_item.get_param(sec, obj and obj:id(), "kind", "string", true)

        local drag = math.min(math.max(smallest, ini_adb:r_float_ex("gbo_ranges", kind) or 1.0), 1.0) or 0.1

		local ammo_list = utils_item.get_ammo(obj:section(), id)
		if ammo_list[1] then
			local k_bullet_speed = ini_sys:r_float_ex(ammo_list[1], "k_bullet_speed") or 1
			bullet_speed = (bullet_speed ~= 0) and (k_bullet_speed*bullet_speed) or k_bullet_speed
			bullet_speed = bullet_speed * 0.70
		end
        return math.ceil(bullet_speed * drag)
	end
end

function ish_item_stats.apply_compatibility_patches()
    
    ish()

    utils_ui.stats_table["outfit"]["fire_wound_protection"]     = { index= 10,  typ= "float",   name= "ui_inv_outfit_fire_wound_protection",    icon_p= "ui_am_propery_01",     icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 6}}
    utils_ui.stats_table["outfit"]["burn_protection"]           = { index= 20,  typ= "float",   name= "ui_inv_outfit_burn_protection",          icon_p= "ui_am_prop_thermo",    icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 0}}
    utils_ui.stats_table["outfit"]["shock_protection"]          = { index= 30,  typ= "float",   name= "ui_inv_outfit_shock_protection",         icon_p= "ui_am_prop_electro",   icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 1}}
    utils_ui.stats_table["outfit"]["chemical_burn_protection"]  = { index= 40,  typ= "float",   name= "ui_inv_outfit_chemical_burn_protection", icon_p= "ui_am_prop_chem",      icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 2}}
    utils_ui.stats_table["outfit"]["radiation_protection"]      = { index= 50,  typ= "float",   name= "ui_inv_outfit_radiation_protection",     icon_p= "ui_am_propery_09",     icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 3}}
    utils_ui.stats_table["outfit"]["telepatic_protection"]      = { index= 60,  typ= "float",   name= "ui_inv_outfit_telepatic_protection",     icon_p= "ui_am_propery_11",     icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 4}}
    utils_ui.stats_table["outfit"]["wound_protection"]          = { index= 70,  typ= "float",   name= "ui_inv_outfit_wound_protection",         icon_p= "ui_am_prop_wound",     icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 5}}
    utils_ui.stats_table["outfit"]["strike_protection"]         = { index= 80,  typ= "float",   name= "ui_inv_outfit_strike_protection",        icon_p= "ui_am_prop_strike",    icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 7}}
    utils_ui.stats_table["outfit"]["explosion_protection"]      = { index= 90,  typ= "float",   name= "ui_inv_outfit_explosion_protection",     icon_p= "ui_am_prop_explo",     icon_n= "",                                 track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= true,  value_functor= {"gamma_ish_stats","get_outfit_protection", 8}}

    utils_ui.stats_table["artefact"]["burn_immunity"]           = { index= 7,   typ= "float",   name= "ui_inv_outfit_burn_protection",          icon_p= "ui_am_prop_thermo",    icon_n= "ui_am_prop_burn_immunity",         track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",0} }
    utils_ui.stats_table["artefact"]["shock_immunity"]          = { index= 8,   typ= "float",   name= "ui_inv_outfit_shock_protection",         icon_p= "ui_am_prop_electro",   icon_n= "ui_am_prop_shock_immunity",        track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",1} }
    utils_ui.stats_table["artefact"]["radiation_immunity"]      = { index= 9,   typ= "float",   name= "ui_inv_outfit_radiation_protection",     icon_p= "ui_am_propery_09",     icon_n= "ui_am_prop_radiation_immunity",    track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",3} }
    utils_ui.stats_table["artefact"]["telepatic_immunity"]      = { index= 10,  typ= "float",   name= "ui_inv_outfit_telepatic_protection",     icon_p= "ui_am_propery_11",     icon_n= "ui_am_prop_telepat_immunity",      track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",4} }
    utils_ui.stats_table["artefact"]["chemical_burn_immunity"]  = { index= 11,  typ= "float",   name= "ui_inv_outfit_chemical_burn_protection", icon_p= "ui_am_prop_chem",      icon_n= "ui_am_prop_chemburn_immunity",     track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",2} }
    utils_ui.stats_table["artefact"]["wound_immunity"]          = { index= 12,  typ= "float",   name= "ui_inv_outfit_wound_protection",         icon_p= "ui_am_prop_wound",     icon_n= "ui_am_prop_wound_minus",           track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",5} }
    utils_ui.stats_table["artefact"]["fire_wound_immunity"]     = { index= 13,  typ= "float",   name= "ui_inv_outfit_fire_wound_protection",    icon_p= "ui_am_propery_01",     icon_n= "ui_am_prop_fire_wound_negative",   track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",6} }
    utils_ui.stats_table["artefact"]["explosion_immunity"]      = { index= 14,  typ= "float",   name= "ui_inv_outfit_explosion_protection",     icon_p= "ui_am_prop_explo",     icon_n= "ui_am_prop_explo_minus",           track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",8} }
    utils_ui.stats_table["artefact"]["strike_immunity"]         = { index= 15,  typ= "float",   name= "ui_inv_outfit_strike_protection",        icon_p= "ui_am_prop_strike",    icon_n= "ui_am_prop_strike_minus",          track= false,   magnitude= 100, unit= "st_perc",    condition= false,    compare= false, sign= true, show_always= false, value_functor= {"gamma_ish_stats","get_arti_protection",7} }

    utils_ui.stats_table["weapon"]["eff_range"]                 = { index= 110, typ= "float",   name= "ui_inv_weapon_eff_range",                icon_p= "ui_wp_propery_05",     icon_n= "",                                 track= false,   magnitude= 1, unit= "st_stat_meters", compare= false, sign= false, show_always= true, value_functor= {"gamma_ish_stats","get_weapon_eff_range"}}

end